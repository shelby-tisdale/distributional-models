---
title: "GAMLSS Modeling"
author: "Shelby Tisdale"
format: html
editor: 
  markdown: 
    wrap: 72
---


# Load Data and Packages


```{r}
#| label: load-packages
#| warning: false
#| message: false

library(tidyverse)
library(gamlss)
library(bamlss)
library(gamlss.ggplots)
```

```{r}
#| label: load-data
#| warning: false

data_dir <- 'C:/Users/queen/Box/ABCD Tabulated Data/5.1/core/'

# NOTE: must run entire code chunk
if(!is.null(data_dir)){
  setwd(data_dir)
}

# LOAD DATA
# Demographic variables and propensity weights
demog <- read.csv("abcd-general/abcd_p_demo.csv", na.strings = c("999", "777"))
# Age in months, Site ID (ABCD Study Design Variables), Family ID
study_covars <- read.csv("abcd-general/abcd_y_lt.csv")
# desikan atlas, cortical thickness
dat.mri = read.csv('imaging/mri_y_smr_thk_dsk.csv') |>
  select(src_subject_id, eventname, smri_thick_cdk_mean)
# desikan atlas, cortical surface area
dat.mri.area = read.csv('imaging/mri_y_smr_area_dsk.csv') |>
  select(src_subject_id, eventname, smri_area_cdk_total)
```


# Clean Data


```{r}
#| label: clean-data

# basic cleaning for demographic variables
demog_clean <- demog |>
  # filter for events of interest
  filter(eventname %in% c("baseline_year_1_arm_1", "2_year_follow_up_y_arm_1",
                          "4_year_follow_up_y_arm_1")) |>
  # select broad demographics
  select(src_subject_id, eventname, starts_with("demo_brthdat_v2"), demo_sex_v2, race_ethnicity) |>
  mutate(
    # clean age variable
    age = case_when(
      eventname == "baseline_year_1_arm_1" ~ trunc(demo_brthdat_v2), # remove decimals 
      eventname %in% c("2_year_follow_up_y_arm_1", "4_year_follow_up_y_arm_1") ~
        trunc(demo_brthdat_v2_l)),
    # broad race/ethnicity categories
    # will disaggregate in final analysis
    race_ethnicity = case_match(
      race_ethnicity,
      1 ~ "White",
      2 ~ "Black",
      3 ~ "Hispanic",
      4 ~ "Asian",
      5 ~ "Other"
    ),
    # recode sex variable
    sex = factor(demo_sex_v2),
    sex = fct_recode(
      sex,
      "Male" = "1",
      "Female" = "2",
      "Intersex-Male" = "3"
    ))

# create dataset for modeling
thickness <- dat.mri |>
  full_join(dat.mri.area, by = join_by("eventname", "src_subject_id")) |>
  # join mri data to demographics
  right_join(demog_clean, by = join_by("eventname", "src_subject_id")) |>
  # join to study covariates
  left_join(study_covars, by = join_by("eventname", "src_subject_id")) |>
  # select variables of interest
  select(src_subject_id, eventname, smri_thick_cdk_mean, smri_area_cdk_total, age, sex, site_id_l, race_ethnicity, interview_age) |>
  # remove irrelevant ages 
  filter(age < 16 & age > 8) |>
  mutate(interview_age = as.numeric(interview_age)) |>
  rename(thick = smri_thick_cdk_mean,
         area = smri_area_cdk_total) |>
  drop_na(thick, area) |>
  group_by(src_subject_id) |>
  # fill repeated demographic values
  mutate(sex = first(na.omit(sex)),
         race_ethnicity = first(na.omit(race_ethnicity)),
         # change in cortical thickness / surface area
         change = thick - thick[1],
         change_area = area - area[1],
         src_subject_id = factor(src_subject_id),
         site_id_l = factor(site_id_l),
         race_ethnicity = factor(race_ethnicity)) |>
  ungroup()
         
# create wide dataset 
thickness_wide <- thickness |>
  drop_na() |>
  mutate(time = case_when(eventname == 'baseline_year_1_arm_1' ~ 0,
                          eventname == '2_year_follow_up_y_arm_1' ~ 2,
                          eventname == '4_year_follow_up_y_arm_1' ~ 4)) |>
  select(-eventname) |>
  pivot_wider(names_from = time,
              values_from = c(thick, area, change, change_area, interview_age))
```


# Centile Estimation for Cortical Surface Area

## Exploratory Data Analysis


```{r}
#| label: EDA
#| warning: false
#| message: false

# use geom_text to print sample size on each facet

thickness |>
  filter(!is.na(sex) & !is.na(race_ethnicity) & sex != "Intersex-Male") |>
  ggplot(aes(x = interview_age, y = area)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "gam", aes(color = race_ethnicity)) +
  facet_wrap(~sex) +
  theme_minimal() +
  scale_color_brewer(palette = "Dark2") +
  labs(x = "Interview Age in Months", y = "Cortical Surface Area (mm^2)",
       title = "Cortical Surface Area by Interview Age and Demographics",
       color = "Race / Ethnicity") +
  theme(legend.position = "top")

thickness |> 
  filter(!is.na(sex) & !is.na(race_ethnicity) & sex != "Intersex-Male") |>
  ggplot(aes(x = area)) +
  geom_density(aes(fill = sex), alpha = 0.5) +
  theme_minimal() +
  facet_grid(race_ethnicity~age) +
  labs(title = "Cortical Surface Area Distribution by Age, Race/Ethnicity, and Sex",
       x = "Cortical Surface Area (mm^2)",
       y = NULL,
       fill = "Sex") +
  theme(axis.text.y = element_blank(),
        legend.position = "top")
```


## Models with Normal Family

### Model 1


```{r}
#| label: area-model-1

# look into adding height

# initial model for surface area using gamlss
# simplified model with no smoothing functions
area_model1 <- gamlss(
  # models area as a linear function of age with random intercepts for subject and site
  area ~ interview_age + gamlss::random(src_subject_id) + gamlss::random(site_id_l),
  # variance as a linear function of age
  sigma.formula = ~interview_age,
  # uses normal distribution
  family = NO,
  data = na.omit(thickness)
)

# model summary
summary(area_model1)

# plot centiles
fitted_centiles_legend(
  area_model1,
  cent = c(2.5, 50, 97.5),
  xvar = thickness %>% na.omit %>% dplyr::select(interview_age) %>% pull) +
  labs(x = "interview age (months)",
       y = "Cortical Surface Area") +
  theme_minimal()
```


### Model 2


```{r}
#| label: area-model-2

# model 2 for surface area using gamlss
# simple model with smoothing function in model formula
area_model2 <- gamlss(
  # models area as a function of age with random intercepts for subject and site
  # uses p-spline smoothing function for age - I think this is a good choice
  area ~ pb(interview_age) + gamlss::random(src_subject_id) + gamlss::random(site_id_l),
  # variance as a linear function of age
  sigma.formula = ~interview_age,
  # uses normal distribution
  family = NO,
  data = na.omit(thickness)
)
# converged in two iterations

# model summary
summary(area_model2)

# plot centiles
# lines are less straight than the first plot - good
# plot centiles
fitted_centiles_legend(
  area_model2,
  cent = c(2.5, 50, 97.5),
  xvar = thickness %>% na.omit %>% dplyr::select(interview_age) %>% pull) +
  labs(x = "interview age (months)",
       y = "Cortical Surface Area") +
  theme_minimal()

```


### Model 3


```{r}
#| label: area-model-3

# model 3 for surface area using gamlss
# simple model with smoothing function in model formula + smoothing function for variance
area_model3 <- gamlss(
  # models area as a function of age with random intercepts for subject and site
  # uses p-spline smoothing function for age - I think this is a good choice
  area ~ pb(interview_age) + gamlss::random(src_subject_id) + gamlss::random(site_id_l),
  # variance as a smooth function of age
  sigma.formula = ~pb(interview_age),
  # uses normal distribution
  family = NO,
  data = na.omit(thickness)
)

# model summary
summary(area_model3)

# plot centiles
fitted_centiles_legend(
  area_model3,
  cent = c(2.5, 50, 97.5),
  xvar = thickness %>% na.omit %>% dplyr::select(interview_age) %>% pull) +
  labs(x = "interview age (months)",
       y = "Cortical Surface Area") +
  theme_minimal()
```


### Model 4


```{r}
#| label: area-model-4

# model 4 for surface area using gamlss
# simple model with smoothing function in model formula + smoothing function for variance + linear functions for skew and kurt
area_model4 <- gamlss(
  # models area as a function of age with random intercepts for subject and site
  # uses p-spline smoothing function for age
  area ~ pb(interview_age) + gamlss::random(src_subject_id) + gamlss::random(site_id_l),
  # variance as a linear function of age
  sigma.formula = ~pb(interview_age),
  # doesn't seem to do much
  tau.formula = interview_age,
  nu.formula = interview_age,
  # uses normal distribution
  family = NO,
  data = na.omit(thickness)
)

# model summary
summary(area_model4)

# plot centiles
fitted_centiles_legend(
  area_model4,
  cent = c(2.5, 50, 97.5),
  xvar = thickness %>% na.omit %>% dplyr::select(interview_age) %>% pull) +
  labs(x = "interview age (months)",
       y = "Cortical Surface Area") +
  theme_minimal()
```


### Comparison of Models 1-4 (Normal Models)


```{r}
#| label: normal-model-comparison
#| warning: false

# check q statistics and worm plots
# model 1
round(Q.stats(
  area_model1,
  xvar = na.omit(thickness)$interview_age), 3)
wp(area_model1, xvar = na.omit(thickness)$interview_age)

# model 2
round(Q.stats(
  area_model2,
  xvar = na.omit(thickness)$interview_age), 3)
wp(area_model2, xvar = na.omit(thickness)$interview_age)

# model 3
round(Q.stats(
  area_model3,
  xvar = na.omit(thickness)$interview_age), 3)
wp(area_model3, xvar = na.omit(thickness)$interview_age)

# model 4
round(Q.stats(
  area_model4,
  xvar = na.omit(thickness)$interview_age), 3)
wp(area_model4, xvar = na.omit(thickness)$interview_age)
```


## Model selection with `lms()`


```{r}
#| label: centile-estimation-with-lms

# lms method for fitting distributional models
# assumes response var has a BCCG distribution
area_lms_0 <- lms(y = area, x = interview_age, data = na.omit(thickness), k = 2)
area_lms_0$family

# family is BCPEo
area_model_5 <- gamlss(
  area ~ pb(interview_age) + gamlss::random(src_subject_id) + gamlss::random(site_id_l),
  sigma.formula = ~pb(interview_age),
  tau.formula = ~pb(interview_age),
  nu.formula = ~pb(interview_age),
  # uses normal distribution
  family = BCPEo,
  data = na.omit(thickness)
)

# family BCT
area_model_6 <- gamlss(
  area ~ pb(interview_age) + gamlss::random(src_subject_id) + gamlss::random(site_id_l),
  sigma.formula = ~pb(interview_age),
  tau.formula = ~pb(interview_age),
  nu.formula = ~pb(interview_age),
  # uses normal distribution
  family = BCT,
  data = na.omit(thickness)
)

# residual diagnostices for model 0
round(Q.stats(area_lms_0, xvar = na.omit(thickness)$interview_age), 3)
wp(area_lms_0, xvar = na.omit(thickness)$interview_age)

# residual diagnostices for model 5
round(Q.stats(area_model_5, xvar = na.omit(thickness)$interview_age), 3)
wp(area_model_5, xvar = na.omit(thickness)$interview_age)

# residual diagnostices for model 6
round(Q.stats(area_model_6, xvar = na.omit(thickness)$interview_age), 3)
wp(area_model_6, xvar = na.omit(thickness)$interview_age)

# fitted plots
fittedPlot(area_lms_0, x = na.omit(thickness)$interview_age)
fittedPlot(area_lms_0, area_model_5, x = na.omit(thickness)$interview_age, line.type = c(1,2))

centiles(area_lms_0, na.omit(thickness)$interview_age)
```

```{r}
#| label: models-with-power-transformation

# lms function with power transformation on predictor
area_lms_1 <- lms(area, interview_age, data = na.omit(thickness), trans.x = TRUE, k = 2)

area_lms_1$family
area_lms_1$power

area_model_7 <- gamlss(
  area ~ pb(interview_age^area_lms_1$power, df = area_lms_1$mu.df) + gamlss::random(src_subject_id) + gamlss::random(site_id_l),
  sigma.formula = ~pb(interview_age, df = area_lms_1$sigma.df),
  tau.formula = ~pb(interview_age, df = area_lms_1$tau.df),
  nu.formula = ~pb(interview_age, area_lms_1$nu.df),
  # uses normal distribution
  family = BCPEo,
  data = na.omit(thickness)
)

# model 7 but with no random effects
area_model_8 <- gamlss(
  area ~ pb(interview_age^area_lms_1$power, df = area_lms_1$mu.df),
  sigma.formula = ~pb(interview_age, df = area_lms_1$sigma.df),
  tau.formula = ~pb(interview_age, df = area_lms_1$tau.df),
  nu.formula = ~pb(interview_age, area_lms_1$nu.df),
  # uses normal distribution
  family = BCPEo,
  data = na.omit(thickness)
)

# residual diagnostices for model 7
round(Q.stats(area_model_7, xvar = na.omit(thickness)$interview_age), 3)
wp(area_model_7, xvar = na.omit(thickness)$interview_age)

# residual diagnostices for model 8
round(Q.stats(area_model_8, xvar = na.omit(thickness)$interview_age), 3)
wp(area_model_8, xvar = na.omit(thickness)$interview_age)


# plot centiles
fitted_centiles_legend(
  area_model_7,
  cent = c(2.5, 50, 97.5),
  xvar = thickness %>% na.omit %>% dplyr::select(interview_age) %>% pull) +
  labs(x = "interview age (months)",
       y = "Cortical Surface Area") +
  theme_minimal()

# calculate GAIC - exactly the same
GAIC(area_model_7)
GAIC(area_model_8)
```


## Modeling with Box-Cox Power Exponential Original Family


```{r}
#| label: BCPEo-Models

# power transformation, random effects, smoothing functions for all params
area_model_7 <- gamlss(
  area ~ pb(interview_age^area_lms_1$power, df = area_lms_1$mu.df) + gamlss::random(src_subject_id) + gamlss::random(site_id_l),
  sigma.formula = ~pb(interview_age, df = area_lms_1$sigma.df),
  tau.formula = ~pb(interview_age, df = area_lms_1$tau.df),
  nu.formula = ~pb(interview_age, area_lms_1$nu.df),
  family = BCPEo,
  data = na.omit(thickness)
)

# no power transformation, random effects, smoothing functions for all params
area_model_9 <- gamlss(
  area ~ pb(interview_age, df = area_lms_1$mu.df) + gamlss::random(src_subject_id) + gamlss::random(site_id_l),
  sigma.formula = ~pb(interview_age, df = area_lms_1$sigma.df),
  tau.formula = ~pb(interview_age, df = area_lms_1$tau.df),
  nu.formula = ~pb(interview_age, area_lms_1$nu.df),
  family = BCPEo,
  data = na.omit(thickness)
)

# power transformation, random effects, no smoothing for tau and nu
area_model_10 <- gamlss(
  area ~ pb(interview_age^area_lms_1$power, df = area_lms_1$mu.df) + gamlss::random(src_subject_id) + gamlss::random(site_id_l),
  sigma.formula = ~pb(interview_age, df = area_lms_1$sigma.df),
  tau.formula = ~interview_age,
  nu.formula = ~interview_age,
  family = BCPEo,
  data = na.omit(thickness)
)

# no power transformation, random effects, no smoothing for tau and nu
area_model_11 <- gamlss(
  area ~ pb(interview_age, df = area_lms_1$mu.df) + gamlss::random(src_subject_id) + gamlss::random(site_id_l),
  sigma.formula = ~pb(interview_age, df = area_lms_1$sigma.df),
  tau.formula = ~interview_age,
  nu.formula = ~interview_age,
  family = BCPEo,
  data = na.omit(thickness)
)

# residual diagnostices for model 7
# one q-stat under 0.05
round(Q.stats(area_model_7, xvar = na.omit(thickness)$interview_age), 3)
wp(area_model_7, xvar = na.omit(thickness)$interview_age)

# residual diagnostices for model 9
# one q-stat under 0.05
round(Q.stats(area_model_9, xvar = na.omit(thickness)$interview_age), 3)
wp(area_model_9, xvar = na.omit(thickness)$interview_age)

# residual diagnostices for model 10
# no q-stat under 0.05
round(Q.stats(area_model_10, xvar = na.omit(thickness)$interview_age), 3)
wp(area_model_10, xvar = na.omit(thickness)$interview_age)

# plot centiles for model 10
fitted_centiles_legend(
  area_model_10,
  xvar = thickness %>% na.omit %>% dplyr::select(interview_age) %>% pull) +
  labs(x = "interview age (months)",
       y = "Cortical Surface Area") +
  theme_minimal()

# residual diagnostices for model 11
# no q-stat under 0.05
round(Q.stats(area_model_11, xvar = na.omit(thickness)$interview_age), 3)
wp(area_model_11, xvar = na.omit(thickness)$interview_age)

GAIC(area_model_7)
GAIC(area_model_9)
GAIC(area_model_10) # MODEL 10 HAS BEST AIC
GAIC(area_model_11)

GAIC(area_model_7,  k = log(nrow(na.omit(thickness))))
GAIC(area_model_9,  k = log(nrow(na.omit(thickness))))
GAIC(area_model_10, k = log(nrow(na.omit(thickness)))) # MODEL 10 HAS BEST GAIC
GAIC(area_model_11, k = log(nrow(na.omit(thickness))))
```

