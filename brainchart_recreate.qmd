---
title: "Recreating Lifespan Brainchart Code"
format: html
---

```{r}
#| label: load-packages
#| warning: false

library(gamlss)
library(ggseg)
library(ggplot2)
library(forcats)
library(dplyr)
library(tidyverse)

```


```{r}


bfpNA <- function (x, powers = c(1, 2), shift = 0, scale = 1) ## have change gamlss:bfp() defaults, now fix shift=0 and scale=1 [DATA DEPENDENT SCALING IS BAD!]
{
    ## fp.scale <- function(x) {
    ##     if( all(is.na(x)) ) {stop("All NAs makes no sense")}
    ##     if (min(x,na.rm=TRUE) <= 0) {
    ##         xx <- na.omit(x)
    ##         z <- sort(xx)[-1] - sort(xx)[-length(xx)]
    ##         shift <- min(z[z > 0]) - min(xx)
    ##     }
    ##     else shift <- 0
    ##     range <- max(x,na.rm=TRUE) - min(x,na.rm=TRUE)
    ##     scale <- 10^(sign(log10(range)) * trunc(abs(log10(range))))
    ##     list(shift = shift, scale = scale)
    ## }
    nobs <- length(x)
    npoly <- length(powers)
    X <- matrix(0, nrow = nobs, ncol = npoly)
    if (is.null(scale) | is.null(shift)) {
        stop("WARNING: Using automatic scale/shift will invalidate future refitting")
        out <- fp.scale(x)
        shift <- out$shift
        scale <- out$scale
    }
    ## x <- x + shift ## ASSUME variable is validly scaled and shifted!
    ## x <- x/scale
    x1 <- ifelse(powers[1] != rep(0, nobs), x^powers[1], log(x))
    X[, 1] <- x1
    if (npoly >= 2) {
        for (i in 2:npoly) {
            if (powers[i] == powers[(i - 1)]) 
                x2 <- log(x) * x1
            else x2 <- ifelse(powers[i] != rep(0, nobs), x^powers[i], 
                log(x))
            X[, i] <- x2
            x1 <- x2
        }
    }
    X
}

##
## bfp() := the in-built gamlss function cannot handle NAs
##          we replace the in-built with a warning, to make sure we do not accidentally use the 'broken' version
bfp <- function( ... ) {stop("Default bfp() function cannot handle NAs. We have masked with this fatal error. Use bfpNA() instead. ")}

## never mind this is a lot more complicated than i thought it would be :( shelby come back 
```




```{r}
#| label: MRI-data-cleaning
#| warning: false
#looking at MRI data 

ggplot() +
  geom_brain(atlas = dk, position = position_brain(hemi ~ side))



#what do the first couple columns of thickness data look like  
dat.mri |> 
  select(src_subject_id, eventname, smri_thick_cdk_banksstslh,
         smri_thick_cdk_cdacatelh, smri_thick_cdk_cdmdfrlh, 
         smri_thick_cdk_cuneuslh, smri_thick_cdk_ehinallh) |>
  group_by(eventname) |> 
  mutate(eventname = factor(eventname)) |>
  mutate(eventname = fct_relevel(eventname, 
                                 c("baseline_year_1_arm_1", 
                                   "2_year_follow_up_y_arm_1", 
                                   "4_year_follow_up_y_arm_1"))) |>
  pivot_longer(cols = c(smri_thick_cdk_banksstslh:smri_thick_cdk_ehinallh), 
               names_to = "brain_morphology", 
               values_to = "thickness_mm") |>
  ggplot(aes(x = eventname, y = thickness_mm, color = brain_morphology)) + 
  geom_boxplot() 



#trying to make df that is one row for each subject so that we can join with demog data
# with columns for each timepoint and morphology measure 

braintest <- dat.mri |> 
  select(src_subject_id:smri_thick_cdk_ehinallh) |> 
  pivot_longer(cols = starts_with("smri_thick_cdk_"), 
                                  names_to = "morphology_measure", 
                                  values_to = "value") |> 
  mutate(eventname = factor(eventname)) |> 
  mutate(eventname = fct_recode(eventname, 
                                baseline = "baseline_year_1_arm_1",
                                year2 = "2_year_follow_up_y_arm_1", 
                                year4 = "4_year_follow_up_y_arm_1")) |> 
  mutate(event_val = paste(eventname, morphology_measure, sep = "_")) |> 
  select(-morphology_measure) |> 
  pivot_wider(names_from = event_val, values_from = value)
  


# for some reason I can't figure out how to get one row per subject it is still splitting up by timepoint
# climbing brain break!! 


               






```









